name: Code Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libxrandr-dev \
          libxinerama-dev \
          libxcursor-dev \
          libxi-dev \
          libxext-dev \
          libx11-dev \
          mesa-common-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev

    - name: Build project for analysis
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug
        make -j$(nproc)

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check for known vulnerabilities
      run: |
        echo "üîç Checking dependencies for known vulnerabilities..."
        # Check CMakeLists.txt for dependency versions
        if grep -q "GIT_TAG" CMakeLists.txt; then
          echo "‚úÖ Dependencies are pinned to specific versions"
          echo "üìã Dependency versions:"
          grep -E "GIT_TAG.*[0-9]" CMakeLists.txt || true
        else
          echo "‚ö†Ô∏è  Some dependencies may not be pinned to specific versions"
        fi

    - name: License compliance check
      run: |
        echo "üìù Checking license files..."
        if [ -f "LICENSE" ]; then
          echo "‚úÖ Project license file found"
        else
          echo "‚ö†Ô∏è  No LICENSE file found"
        fi
